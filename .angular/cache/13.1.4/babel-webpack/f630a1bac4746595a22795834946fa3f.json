{"ast":null,"code":"import { get_minutes_seconds } from './helpers/get_minutes_seconds';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"./timer/timer.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(titleService) {\n      this.titleService = titleService;\n      this.title = 'pomodoro-timer';\n      this.flag = true;\n      this.seconds = 0;\n    }\n\n    setTitle(newTitle) {\n      this.titleService.setTitle(newTitle);\n    } // set_frequency(freq: number, secondary_color: string = 'white'){\n    //   // freq in milliseconds\n    //   // TODO need to support other frequencies \n    //   this.total = 1000;\n    //   let primary_color: string = 'white'\n    //   this.color_timer = setInterval(()=>{\n    //     console.log('start.', this.total)\n    //     if(this.total <= freq){\n    //       this.background_color = primary_color;\n    //       console.log('1');\n    //       this.clear_timer();\n    //     }\n    //     else{\n    //       this.background_color = secondary_color;\n    //       console.log('2', this.total);\n    //     }\n    //     this.total -= freq;\n    //     if(this.total < 0) this.clear_timer();\n    //     console.log('done.', this.total)\n    //   }, freq);\n    // }\n\n\n    clear_timer() {\n      clearInterval(this.color_timer);\n    }\n\n    seconds_remaining(seconds) {\n      this.seconds = seconds;\n      let current_time = get_minutes_seconds(this.seconds);\n      this.setTitle(current_time[0] + ':' + current_time[1]);\n      if (seconds > 120) this.background_color = 'white';\n      if (seconds === 0) this.background_color = 'red';else {\n        if (seconds <= 30) {\n          //this.set_frequency(500, 'red');\n          if (seconds % 2 === 0) this.background_color = 'red';\n          if (seconds % 2 !== 0) this.background_color = 'white';\n        } else if (seconds <= 60) {\n          if (seconds % 2 === 0) this.background_color = 'orangered';\n          if (seconds % 2 !== 0) this.background_color = 'white';\n        } else if (seconds <= 90) {\n          this.background_color = 'orange';\n        } else if (seconds <= 120) {\n          this.background_color = 'yellow';\n        }\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Title));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [3, \"seconds_remaining_event\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"app-timer\", 2);\n        i0.ɵɵlistener(\"seconds_remaining_event\", function AppComponent_Template_app_timer_seconds_remaining_event_2_listener($event) {\n          return ctx.seconds_remaining($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"background\", ctx.background_color);\n      }\n    },\n    directives: [i2.TimerComponent],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}